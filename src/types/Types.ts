/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/Types/CreateTable": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Creeer database objecten */
        post: {
            parameters: {
                query: {
                    /** @description Dummy records aanmaken */
                    FILLDATA: boolean;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Aangemaakt, Tabel toegevoegd */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Data verwerkingsfout, bijv omdat de tabel al bestaat */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/Types/CreateViews": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Creeer database views */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Aangemaakt, View toegevoegd */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Data verwerkingsfout, view niet aangemaak */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/Types/GetObject": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Haal een enkel record op uit de database */
        get: {
            parameters: {
                query: {
                    /** @description Database ID van het type record */
                    ID: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK, data succesvol opgehaald */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ref_types"];
                    };
                };
                /** @description Data niet gevonden */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Methode niet toegestaan, input validatie error */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Niet aanvaardbaar, input ontbreekt */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/Types/GetObjects": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Haal een lijst met records op uit de database. Query parameters worden in AND conditie gebruikt */
        get: {
            parameters: {
                query?: {
                    /** @description Database ID van het aanwezig record */
                    ID?: number;
                    /** @description Toon welke records verwijderd zijn. Default = false */
                    VERWIJDERD?: boolean;
                    /** @description Laatste aanpassing op basis van records in dataset. Bedoeld om data verbruik te verminderen. Dataset is daarom leeg */
                    LAATSTE_AANPASSING?: boolean;
                    /** @description HASH van laatste GetObjects aanroep. Indien bij nieuwe aanroep dezelfde data bevat, dan volgt http status code 304. In geval dataset niet hetzelfde is, dan komt de nieuwe dataset terug. Ook bedoeld om dataverbruik te vermindereren. Er wordt alleen data verzonden als het nodig is. */
                    HASH?: string;
                    /** @description Sortering van de velden in ORDER BY formaat. Default = CLUBKIST DESC, VOLGORDE, REGISTRATIE */
                    SORT?: string;
                    /** @description Maximum aantal records in de dataset. Gebruikt in LIMIT query */
                    MAX?: number;
                    /** @description Eerste record in de dataset. Gebruikt in LIMIT query */
                    START?: number;
                    /** @description Welke velden moet opgenomen worden in de dataset */
                    VELDEN?: string;
                    /** @description Haal alle types op van een specieke groep */
                    GROEP?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK, data succesvol opgehaald */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["view_types"];
                    };
                };
                /** @description Data niet gemodificeerd, HASH in aanroep == hash in dataset */
                304: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Methode niet toegestaan, input validatie error */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/Types/GetClubVliegtuigenTypes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Haal een lijst met club vliegtuig types op uit de database. */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK, data succesvol opgehaald */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["view_types"];
                    };
                };
                /** @description Data niet gemodificeerd, HASH in aanroep == hash in dataset */
                304: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Methode niet toegestaan, input validatie error */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/Types/DeleteObject": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Markeer record als verwijderd. */
        delete: {
            parameters: {
                query: {
                    /** @description Database ID van het record. Meerdere ID's in CSV formaat */
                    ID: number;
                    /** @description Controleer of record bestaat voordat het verwijderd wordt. Default = true */
                    VERIFICATIE?: boolean;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Type verwijderd */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Niet geautoriseerd, geen schrijfrechten */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Data niet gevonden */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Methode niet toegestaan, input validatie error */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Niet aanvaardbaar, input ontbreekt */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/Types/RestoreObject": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Record dat verwijderd is terug halen. VERWIJDERD marker krijgt reset */
        patch: {
            parameters: {
                query: {
                    /** @description Database ID van het record. Meerdere ID's in CSV formaat */
                    ID: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Record(s) hersteld */
                202: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Niet geautoriseerd, geen schrijfrechten */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Data niet gevonden */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Methode niet toegestaan, input validatie error */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Niet aanvaardbaar, input ontbreekt */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/Types/SaveObject": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update bestaand type record */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description type data */
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ref_types_in"];
                };
            };
            responses: {
                /** @description OK, data succesvol aangepast */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ref_types"];
                    };
                };
                /** @description Niet geautoriseerd, geen schrijfrechten */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Data niet gevonden */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Methode niet toegestaan, input validatie error */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Niet aanvaardbaar, input ontbreekt */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        /** Voeg nieuw type record toe */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description type data */
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ref_types_in"];
                };
            };
            responses: {
                /** @description OK, data succesvol toegevoegd */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ref_types"];
                    };
                };
                /** @description Niet geautoriseerd, geen schrijfrechten */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Methode niet toegestaan, input validatie error */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Niet aanvaardbaar, input ontbreekt */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Conflict, record bestaat al */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        ref_types_in: {
            /**
             * Format: int32
             * @description Database ID van het record
             * @example 12871
             */
            ID?: number;
            /**
             * Format: int32
             * @description Type groep
             * @example 101
             */
            GROEP?: number;
            /**
             * @description Zeer korte beschrijving van de code
             * @example 14R
             */
            CODE?: string;
            /** @description Hoe kennen andere systemen / organisatie deze code */
            EXT_REF?: string;
            /**
             * @description Volledige omschrijving van het type
             * @example Windkracht 3 (7-10 kn)
             */
            OMSCHRIJVING?: string;
            /**
             * Format: int32
             * @description Volgorde in de HMI
             * @example 7
             */
            SORTEER_VOLGORDE?: number;
            /**
             * @description Is dit record (met ID) hard gecodeerd in de source code. Zo ja, dan niet aanpassen.
             * @example 0
             */
            READ_ONLY?: boolean;
            /**
             * Format: double
             * @description Het bedrag in Euro's
             * @example 0
             */
            BEDRAG?: number;
            /**
             * Format: numeric
             * @description Bij bestellen van strippen, of afschrijven strippen
             * @example 10115
             */
            EENHEDEN?: number;
        };
        ref_types: components["schemas"]["ref_types_in"] & {
            /**
             * @description Is dit record gemarkeerd als verwijderd?
             * @example 0
             */
            VERWIJDERD?: boolean;
            /**
             * Format: date-time
             * @description Tijdstempel van laaste aanpassing in de database
             * @example 2020-09-28 14:12:00
             */
            LAATSTE_AANPASSING?: string;
        };
        view_types: {
            /**
             * Format: int32
             * @description Aantal records dat voldoet aan de criteria in de database
             * @example 287
             */
            totaal?: number;
            /**
             * Format: date-time
             * @description Tijdstempel van laaste aanpassing in de database van de records dat voldoet aan de criteria
             * @example 2020-07-022 16:39:25
             */
            laatste_aanpassing?: string;
            /**
             * @description hash van de dataset
             * @example 4d00b3f
             */
            hash?: string;
            /** @description De dataset met records */
            dataset?: components["schemas"]["ref_types"][];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
