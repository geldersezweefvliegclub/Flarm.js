/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/Startlijst/CreateTable": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Creeer database objecten */
        post: {
            parameters: {
                query: {
                    /** @description Dummy records aanmaken */
                    FILLDATA: boolean;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Aangemaakt, Tabel toegevoegd */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Data verwerkingsfout, bijv omdat de tabel al bestaat */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/Startlijst/CreateViews": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Creeer database views */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Aangemaakt, View toegevoegd */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Data verwerkingsfout, view niet aangemaak */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/Startlijst/GetObject": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Haal een enkele vlucht op uit de database */
        get: {
            parameters: {
                query: {
                    /** @description Database ID van de vlucht */
                    ID: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK, data succesvol opgehaald */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["oper_startlijst"];
                    };
                };
                /** @description Data niet gevonden */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Methode niet toegestaan, input validatie error */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Niet aanvaardbaar, input ontbreekt */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/Startlijst/GetObjects": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Haal de startlijst op uit de database. Query parameters worden in AND conditie gebruikt */
        get: {
            parameters: {
                query?: {
                    /** @description Database ID van het record */
                    ID?: number;
                    /** @description Toon welke records verwijderd zijn. Default = false */
                    VERWIJDERD?: boolean;
                    /** @description Laatste aanpassing op basis van records in dataset. Bedoeld om data verbruik te verminderen. Dataset is daarom leeg */
                    LAATSTE_AANPASSING?: boolean;
                    /** @description HASH van laatste GetObjects aanroep. Indien bij nieuwe aanroep dezelfde data bevat, dan volgt http status code 304. In geval dataset niet hetzelfde is, dan komt de nieuwe dataset terug. Ook bedoeld om dataverbruik te vermindereren. Er wordt alleen data verzonden als het nodig is. */
                    HASH?: string;
                    /** @description Sortering van de velden in ORDER BY formaat. Default = DATUM desc, Dagnummer */
                    SORT?: string;
                    /** @description Maximum aantal records in de dataset. Gebruikt in LIMIT query */
                    MAX?: number;
                    /** @description Eerste record in de dataset. Gebruikt in LIMIT query */
                    START?: number;
                    /** @description Begin datum (inclusief deze dag) */
                    BEGIN_DATUM?: string;
                    /** @description Eind datum (inclusief deze dag) */
                    EIND_DATUM?: string;
                    /** @description Welke velden moet opgenomen worden in de dataset */
                    VELDEN?: string;
                    /** @description De startmethode van de start. Zie voor ID de types met groep 5 */
                    STARTMETHODE_ID?: string;
                    /** @description Zoek in de NAAM, VLIEGTUIG */
                    SELECTIE?: string;
                    /** @description Startlijst voor bepaald lid, zowel als vlieger als inzittende */
                    LID_ID?: number;
                    /** @description Startlijst voor bepaald vliegtuig */
                    VLIEGTUIG_ID?: number;
                    /** @description Wanneer 'true', toon alleen de vluchten die nog niet geland zijn, of waar gezagvoeder onbekend is */
                    OPEN_STARTS?: boolean;
                    /** @description Toon alleen start op DDWV dagen */
                    DDWV?: boolean;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK, data succesvol opgehaald */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["view_startlijst"];
                    };
                };
                /** @description Data niet gemodificeerd, HASH in aanroep == hash in dataset */
                304: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Methode niet toegestaan, input validatie error */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/Startlijst/GetLogboek": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Haal logboek van gebruiker op. Query parameters worden in AND conditie gebruikt */
        get: {
            parameters: {
                query?: {
                    /** @description Laatste aanpassing op basis van records in dataset. Bedoeld om data verbruik te verminderen. Dataset is daarom leeg */
                    LAATSTE_AANPASSING?: boolean;
                    /** @description HASH van laatste GetObjects aanroep. Indien bij nieuwe aanroep dezelfde data bevat, dan volgt http status code 304. In geval dataset niet hetzelfde is, dan komt de nieuwe dataset terug. Ook bedoeld om dataverbruik te vermindereren. Er wordt alleen data verzonden als het nodig is. */
                    HASH?: string;
                    /** @description Sortering van de velden in ORDER BY formaat. Default, meerste recente vlucht eerst */
                    SORT?: string;
                    /** @description Maximum aantal records in de dataset. Gebruikt in LIMIT query */
                    MAX?: number;
                    /** @description Eerste record in de dataset. Gebruikt in LIMIT query */
                    START?: number;
                    /** @description Begin datum (inclusief deze dag) */
                    BEGIN_DATUM?: string;
                    /** @description Eind datum (inclusief deze dag) */
                    EIND_DATUM?: string;
                    /** @description Alle vluchten van het opgegven jaar */
                    JAAR?: number;
                    /** @description Logboek voor bepaald lid, indien niet aanwezig voor ingelogde gebruiker */
                    LID_ID?: number;
                    /** @description Logboek voor ingelogde lid op het gespecificeerde vliegtuig. Lid kan ook via LID_ID gezet worden */
                    VLIEGTUIG_ID?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK, data succesvol opgehaald */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["logboek"];
                    };
                };
                /** @description Data niet gemodificeerd, HASH in aanroep == hash in dataset */
                304: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Niet geautoriseerd, geen rechten om data op te halen */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Methode niet toegestaan, input validatie error */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/Startlijst/GetLogboekTotalen": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Haal totalen van vliegdata op van een lid. Starts per kist en start types. Query parameters worden in AND conditie gebruikt */
        get: {
            parameters: {
                query?: {
                    /** @description Laatste aanpassing op basis van records in dataset. Bedoeld om data verbruik te verminderen. Dataset is daarom leeg */
                    LAATSTE_AANPASSING?: boolean;
                    /** @description HASH van laatste GetObjects aanroep. Indien bij nieuwe aanroep dezelfde data bevat, dan volgt http status code 304. In geval dataset niet hetzelfde is, dan komt de nieuwe dataset terug. Ook bedoeld om dataverbruik te vermindereren. Er wordt alleen data verzonden als het nodig is. */
                    HASH?: string;
                    /** @description Alle vluchten van het opgegven jaar */
                    JAAR?: number;
                    /** @description Logboek voor specifiek lid, ID is database ID van het lid */
                    LID_ID?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK, data succesvol opgehaald */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["logboek_totalen"];
                    };
                };
                /** @description Data niet gemodificeerd, HASH in aanroep == hash in dataset */
                304: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Niet geautoriseerd, geen rechten om data op te halen */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Methode niet toegestaan, input validatie error */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/Startlijst/GetVliegtuigLogboek": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Haal logboek van het vliegtuig op. Query parameters worden in AND conditie gebruikt */
        get: {
            parameters: {
                query?: {
                    /** @description Laatste aanpassing op basis van records in dataset. Bedoeld om data verbruik te verminderen. Dataset is daarom leeg */
                    LAATSTE_AANPASSING?: boolean;
                    /** @description HASH van laatste GetObjects aanroep. Indien bij nieuwe aanroep dezelfde data bevat, dan volgt http status code 304. In geval dataset niet hetzelfde is, dan komt de nieuwe dataset terug. Ook bedoeld om dataverbruik te vermindereren. Er wordt alleen data verzonden als het nodig is. */
                    HASH?: string;
                    /** @description Sortering van de velden in ORDER BY formaat. Default, meerste recente vlucht eerst */
                    SORT?: string;
                    /** @description Maximum aantal records in de dataset. Gebruikt in LIMIT query */
                    MAX?: number;
                    /** @description Eerste record in de dataset. Gebruikt in LIMIT query */
                    START?: number;
                    /** @description Begin datum (inclusief deze dag) */
                    BEGIN_DATUM?: string;
                    /** @description Eind datum (inclusief deze dag) */
                    EIND_DATUM?: string;
                    /** @description Logboek voor specifiek vliegtuig, ID is database ID van het vliegtuig */
                    ID?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK, data succesvol opgehaald */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["vliegtuig_logboek"];
                    };
                };
                /** @description Data niet gemodificeerd, HASH in aanroep == hash in dataset */
                304: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Niet geautoriseerd, geen rechten om data op te halen */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Methode niet toegestaan, input validatie error */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/Startlijst/GetVliegtuigLogboekTotalen": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Haal vliegdata van een vliegtuig per maand op. Query parameters worden in AND conditie gebruikt */
        get: {
            parameters: {
                query?: {
                    /** @description Laatste aanpassing op basis van records in dataset. Bedoeld om data verbruik te verminderen. Dataset is daarom leeg */
                    LAATSTE_AANPASSING?: boolean;
                    /** @description HASH van laatste GetObjects aanroep. Indien bij nieuwe aanroep dezelfde data bevat, dan volgt http status code 304. In geval dataset niet hetzelfde is, dan komt de nieuwe dataset terug. Ook bedoeld om dataverbruik te vermindereren. Er wordt alleen data verzonden als het nodig is. */
                    HASH?: string;
                    /** @description Alle vluchten van het opgegven jaar */
                    JAAR?: number;
                    /** @description Logboek voor specifiek vliegtuig, ID is database ID van het vliegtuig */
                    ID?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK, data succesvol opgehaald */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["vliegtuig_logboek_totalen"];
                    };
                };
                /** @description Data niet gemodificeerd, HASH in aanroep == hash in dataset */
                304: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Niet geautoriseerd, geen rechten om data op te halen */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Methode niet toegestaan, input validatie error */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/Startlijst/DeleteObject": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Markeer record als verwijderd. */
        delete: {
            parameters: {
                query: {
                    /** @description Database ID van het start record. Meerdere ID's in CSV formaat */
                    ID: string;
                    /** @description Controleer of record bestaat voordat het verwijderd wordt. Default = true */
                    VERIFICATIE?: boolean;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Record verwijderd */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Niet geautoriseerd, geen schrijfrechten */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Data niet gevonden */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Methode niet toegestaan, input validatie error */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Niet aanvaardbaar, input ontbreekt */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/Startlijst/RestoreObject": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Record dat verwijderd is terug halen. VERWIJDERD marker krijgt reset */
        patch: {
            parameters: {
                query: {
                    /** @description Database ID van het record. Meerdere ID's in CSV formaat */
                    ID: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Record(s) hersteld */
                202: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Niet geautoriseerd, geen schrijfrechten */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Data niet gevonden */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Methode niet toegestaan, input validatie error */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Niet aanvaardbaar, input ontbreekt */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/Startlijst/SaveObject": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update bestaande start */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description start data */
            requestBody: {
                content: {
                    "application/json": components["schemas"]["oper_startlijst_in"];
                };
            };
            responses: {
                /** @description OK, data succesvol aangepast */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["oper_startlijst"];
                    };
                };
                /** @description Niet geautoriseerd, geen schrijfrechten */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Data niet gevonden */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Methode niet toegestaan, input validatie error */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Niet aanvaardbaar, input ontbreekt */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Conflict, lidnummer bestaat al */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        /** Voeg nieuwe vlucht toe */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description start data */
            requestBody: {
                content: {
                    "application/json": components["schemas"]["oper_startlijst_in"];
                };
            };
            responses: {
                /** @description OK, data succesvol toegevoegd */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["oper_startlijst"];
                    };
                };
                /** @description Niet geautoriseerd, geen schrijfrechten */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Methode niet toegestaan, input validatie error */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Niet aanvaardbaar, input ontbreekt */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Conflict, lidnummer bestaat al */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/Startlijst/GetRecency": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Hoeveel heeft de vlieger de afgelopen periode gevlogen en hoe is zijn barometer status */
        get: {
            parameters: {
                query: {
                    /** @description Database ID van de vlieger */
                    VLIEGER_ID: number;
                    /** @description Peil datum van de recency */
                    DATUM?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK, data succesvol opgehaald */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["recency"];
                    };
                };
                /** @description Data niet gevonden */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Methode niet toegestaan, input validatie error */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Niet aanvaardbaar, input ontbreekt */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/Startlijst/GetVliegDagen": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Op welke dagen zijn er starts aanwezig */
        get: {
            parameters: {
                query?: {
                    /** @description Sortering van de velden in ORDER BY formaat. Default, meerste recente vlucht eerst */
                    SORT?: string;
                    /** @description Maximum aantal records in de dataset. Gebruikt in LIMIT query, default 10 dagen */
                    MAX?: number;
                    /** @description Begin datum (inclusief deze dag) */
                    BEGIN_DATUM?: string;
                    /** @description Eind datum (inclusief deze dag) */
                    EIND_DATUM?: string;
                    /** @description De vliegdagen voor bepaald lid, indien niet aanwezig voor ingelogde gebruiker */
                    LID_ID?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK, data succesvol opgehaald */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["vliegdagen"];
                    };
                };
                /** @description Data niet gevonden */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Methode niet toegestaan, input validatie error */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Niet aanvaardbaar, input ontbreekt */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        oper_startlijst_in: {
            /**
             * Format: int32
             * @description Database ID van de vlucht
             * @example 12871
             */
            ID?: number;
            /**
             * Format: date
             * @description Datum van de start
             * @example 2017-07-21
             */
            DATUM?: string;
            /**
             * Format: int32
             * @description Dagnummer, start iedere dag op 1
             * @example 4
             */
            DAGNUMMER?: number;
            /**
             * @description Het vliegtuig ID. Verwijzing naar vliegtuigen tabel
             * @example 215
             */
            VLIEGTUIG_ID?: number;
            /**
             * @description Starttijd (hh:mm:ss)
             * @example 12:32:44
             */
            STARTTIJD?: string;
            /**
             * @description Starttijd (hh:mm:ss)
             * @example 12:32:15
             */
            LANDINGSTIJD?: string;
            /**
             * @description De manier van starten (lier / sleep / zelfstart) Verwijzing naar type tabel
             * @example 506
             */
            STARTMETHODE_ID?: number;
            /**
             * @description De vlieger van deze vlucht. Verwijzing naar leden tabel
             * @example 10825
             */
            VLIEGER_ID?: number;
            /**
             * @description Wie zit er nog meer bij. Verwijzing naar leden tabel
             * @example 10412
             */
            INZITTENDE_ID?: number;
            /**
             * @description De naam van de vlieger. Nodig indien de vlieger niet in de leden tabel staat
             * @example Peter Panda
             */
            VLIEGERNAAM?: string;
            /**
             * @description De naam van de vlieger. Nodig indien de vlieger niet in de leden tabel staat
             * @example Wally Windhond
             */
            INZITTENDENAAM?: string;
            /**
             * @description Het sleepvliegtuig ID. Verwijzing naar vliegtuigen tabel
             * @example 215
             */
            SLEEPKIST_ID?: number;
            /**
             * @description Tot welke hoogte (meters) is er gesleept
             * @example 400
             */
            SLEEP_HOOGTE?: number;
            /**
             * @description Op welk veld is er gestart. Verwijzing naar type tabel
             * @example 901
             */
            VELD_ID?: number;
            /**
             * @description Start strip. Verwijzing naar type tabel
             * @example 102
             */
            BAAN_ID?: number;
            /**
             * @description Extra text om opmerkingen toe te voegen
             * @example Buitenlanding
             */
            OPMERKINGEN?: string;
            /**
             * @description Extra text om ID van extern systeem op te slaan
             * @example 2012-06-03:TQ:219
             */
            EXTERNAL_ID?: string;
            /**
             * @description Is dit een passagiers start
             * @example 0
             */
            PAX?: boolean;
            /**
             * @description Is dit een trainingsvlucht start
             * @example 0
             */
            CHECKSTART?: boolean;
            /**
             * @description Is dit een instructie vlucht
             * @example 0
             */
            INSTRUCTIEVLUCHT?: boolean;
        };
        oper_startlijst: components["schemas"]["oper_startlijst_in"] & {
            /**
             * @description Is dit record gemarkeerd als verwijderd?
             * @example 0
             */
            VERWIJDERD?: boolean;
            /**
             * Format: date-time
             * @description Tijdstempel van laaste aanpassing in de database
             * @example 2006-01-05 22:11:43
             */
            LAATSTE_AANPASSING?: string;
        };
        view_startlijst_dataset: components["schemas"]["oper_startlijst"] & {
            /**
             * @description Registratie van het vliegtuig waarop gevlogen is
             * @example D-KLUU
             */
            REGISTRATIE?: string;
            /**
             * @description Callsign van het vliegtuig waarop gevlogen is
             * @example 7U
             */
            CALLSIGN?: string;
            /**
             * @description Is het een club vliegtuig?
             * @example 1
             */
            CLUBKIST?: boolean;
            /**
             * @description Combinatie van registratie en callsign van het sleepvliegtuig
             * @example PH-ELT (ELT)
             */
            SLEEPKIST?: string;
            /**
             * @description Combinatie van registratie en callsign van het vliegtuig waarop gevlogen is
             * @example D-KLUU (7U)
             */
            REG_CALL?: string;
            /**
             * @description Hoe lang is er gevlogen. Indien landingstijd niet is ingevuld, op de dag zelf vliegtijd to nu toe, op alle andere dagen null
             * @example 02:11
             */
            DUUR?: string;
            /**
             * @description De naam van het lid zoals dat in ref_leden staat
             * @example Lowieke de Vos
             */
            VLIEGERNAAM_LID?: string;
            /**
             * @description De naam van de inzittende zoals dat in ref_leden staat
             * @example Momfer de Mol
             */
            INZITTENDENAAM_LID?: string;
            /**
             * @description Vliegtuig type
             * @example LS8
             */
            VLIEGTUIGTYPE?: string;
            /**
             * @description Vliegtuig type ID
             * @example 201
             */
            VLIEGTUIG_TYPE_ID?: number;
            /**
             * @description Het lidtype van het lid zoals dat in ref_leden staat
             * @example 625
             */
            VLIEGER_LIDTYPE_ID?: number;
            /**
             * @description Het lidtype van de inzittende zoals dat in ref_leden staat
             * @example 601
             */
            INZITTENDE_LIDTYPE_ID?: number;
            /**
             * @description Is deze vlucht op een DDWV dag uitgevoerd
             * @example 0
             */
            DDWV?: boolean;
            /**
             * @description De manier van de start
             * @example Lierstart GeZC
             */
            STARTMETHODE?: string;
            /**
             * @description Naam van het vliegveld waarop gestart is
             * @example Terlet
             */
            VELD?: string;
            /**
             * @description Startstrip
             * @example 22R
             */
            BAAN?: string;
        };
        view_startlijst: {
            /**
             * Format: int32
             * @description Aantal records dat voldoet aan de criteria in de database
             * @example 287
             */
            totaal?: number;
            /**
             * Format: date-time
             * @description Tijdstempel van laaste aanpassing in de database van de records dat voldoet aan de criteria
             * @example 2009-12-02 10:19:00
             */
            laatste_aanpassing?: string;
            /**
             * @description hash van de dataset
             * @example 4dccb3f
             */
            hash?: string;
            /** @description De dataset met records */
            dataset?: components["schemas"]["view_startlijst_dataset"][];
        };
        logboek: {
            /**
             * Format: int32
             * @description Aantal records dat voldoet aan de criteria in de database
             * @example 12
             */
            totaal?: number;
            /**
             * Format: date-time
             * @description Tijdstempel van laaste aanpassing in de database van de records dat voldoet aan de criteria
             * @example 2020-06-01 19:59:00
             */
            laatste_aanpassing?: string;
            /**
             * @description hash van de dataset
             * @example c0cabaf
             */
            hash?: string;
            /** @description De dataset met records */
            dataset?: components["schemas"]["logboek_dataset"][];
        };
        logboek_dataset: {
            /**
             * Format: int32
             * @description Database ID van de vlucht
             * @example 3570
             */
            ID?: number;
            /**
             * Format: date
             * @description Datum van de start
             * @example 2012-01-24
             */
            DATUM?: string;
            /**
             * @description Combinatie van registratie en callsign van het vliegtuig waarop gevlogen is
             * @example PH-1292 (E6)
             */
            REG_CALL?: string;
            /**
             * @description Het vliegtuig ID. Verwijzing naar vliegtuigen tabel
             * @example 215
             */
            VLIEGTUIG_ID?: number;
            /**
             * @description Starttijd (hh:mm:ss)
             * @example 12:32:44
             */
            STARTTIJD?: string;
            /**
             * @description Starttijd (hh:mm:ss)
             * @example 12:32:15
             */
            LANDINGSTIJD?: string;
            /**
             * @description Hoe lang is er gevlogen. Indien landingstijd niet is ingevuld, op de dag zelf vliegtijd to nu toe, op alle andere dagen null
             * @example 02:11
             */
            DUUR?: string;
            /**
             * @description De naam van de vlieger
             * @example Lowieke de Vos
             */
            VLIEGERNAAM?: string;
            /**
             * @description De naam van de inzittende
             * @example Momfer de Mol
             */
            INZITTENDENAAM?: string;
            /**
             * @description De vlieger van deze vlucht. Verwijzing naar leden tabel. LET OP; kan verwijzing zijn naar zusterclub of vergelijkbaar, de naam is dan handmatig ingevoerd.
             * @example 10825
             */
            VLIEGER_ID?: number;
            /**
             * @description Wie zit er nog meer bij. Verwijzing naar leden tabel, kan null zijn als inzittende als tekst is ingevoerd
             * @example 10412
             */
            INZITTENDE_ID?: number;
            /**
             * @description De manier van de start
             * @example Lierstart GeZC
             */
            STARTMETHODE?: string;
            /**
             * @description Vliegveld waar gestart is
             * @example Terlet
             */
            VELD?: string;
            /**
             * @description Start strip
             * @example 22R
             */
            BAAN?: string;
            /**
             * @description Vliegtuig type
             * @example LS8
             */
            VLIEGTUIGTYPE?: string;
            /**
             * @description Is dit een pax start
             * @example false
             */
            PAX?: boolean;
            /**
             * @description Is dit een trainingsvlucht start
             * @example false
             */
            CHECKSTART?: boolean;
            /**
             * @description Is dit een instructie vlucht
             * @example true
             */
            INSTRUCTIEVLUCHT?: boolean;
            /**
             * @description De opmerkingen die ingevoerd zijn
             * @example Buitenlanding
             */
            OPMERKINGEN?: string;
        };
        logboek_totalen: {
            /**
             * Format: int32
             * @description Aantal records dat voldoet aan de criteria in de database
             * @example 12
             */
            totaal?: number;
            /**
             * Format: date-time
             * @description Tijdstempel van laaste aanpassing in de database van de records dat voldoet aan de criteria
             * @example 2020-06-01 19:59:00
             */
            laatste_aanpassing?: string;
            /**
             * @description hash van de dataset
             * @example c0cabaf
             */
            hash?: string;
            /** @description Aantal van startmethodes */
            starts?: components["schemas"]["logboek_totalen_start"][];
            /** @description Aantal starts en vliegtijd per vliegtuig */
            vliegtuigen?: components["schemas"]["logboek_totalen_vliegtuigen"][];
            /** @description Totalen van het jaar */
            jaar?: {
                /** Format: int32 */
                STARTS?: number;
                /** Format: int32 */
                INSTRUCTIE_STARTS?: number;
                INSTRUCTIE_UREN?: string;
                VLIEGTIJD?: string;
            };
        };
        logboek_totalen_start: {
            METHODE?: string;
            /** Format: int32 */
            AANTAL?: number;
        };
        logboek_totalen_vliegtuigen: {
            REG_CALL?: string;
            /** Format: int32 */
            STARTS?: number;
            VLIEGTIJD?: string;
        };
        vliegtuig_logboek: {
            /**
             * Format: int32
             * @description Aantal records dat voldoet aan de criteria in de database
             * @example 12
             */
            totaal?: number;
            /**
             * Format: date-time
             * @description Tijdstempel van laaste aanpassing in de database van de records dat voldoet aan de criteria
             * @example 2012-01-17 09:24:16
             */
            laatste_aanpassing?: string;
            /**
             * @description hash van de dataset
             * @example c0cabaf
             */
            hash?: string;
            /** @description De dataset met records */
            dataset?: components["schemas"]["vliegtuig_logboek_dataset"][];
        };
        vliegtuig_logboek_dataset: {
            /**
             * Format: date
             * @description Datum
             * @example 2012-01-24
             */
            DATUM?: string;
            /**
             * @description Aantal vluchten van deze dag
             * @example 4
             */
            VLUCHTEN?: number;
            /**
             * @description Aantal sleepstart op deze dag voor dit vliegtuig
             * @example 4
             */
            LIERSTARTS?: number;
            /**
             * @description Aantal sleepstart op deze dag voor dit vliegtuig
             * @example 4
             */
            SLEEPSTARTS?: number;
            /**
             * @description Starttijd (hh:mm)
             * @example 12:32
             */
            VLIEGTIJD?: string;
            /**
             * @description Combinatie van registratie en callsign van het vliegtuig waarop gevlogen is
             * @example PH-1292 (E6)
             */
            REG_CALL?: string;
        };
        vliegtuig_logboek_totalen: {
            /**
             * Format: int32
             * @description Aantal records dat voldoet aan de criteria in de database
             * @example 287
             */
            totaal?: number;
            /**
             * Format: date-time
             * @description Tijdstempel van laaste aanpassing in de database van de records dat voldoet aan de criteria
             * @example 2009-12-02 10:19:00
             */
            laatste_aanpassing?: string;
            /**
             * @description hash van de dataset
             * @example 4dccb3f
             */
            hash?: string;
            totalen?: {
                /**
                 * @description Aantal vluchten in dit jaar
                 * @example 528
                 */
                VLUCHTEN?: number;
                /**
                 * @description Aantal lierstarts voor dit jaar voor dit vliegtuig
                 * @example 466
                 */
                LIERSTARTS?: number;
                /**
                 * @description Aantal sleepstarts voor dit jaarvoor dit vliegtuig
                 * @example 62
                 */
                SLEEPSTARTS?: number;
                /**
                 * @description Starttijd (hhh:mm)
                 * @example 807:52
                 */
                VLIEGTIJD?: string;
            };
            dataset?: {
                /**
                 * Format: integer
                 * @description Maand
                 * @example 10
                 */
                MAAND?: string;
                /**
                 * @description Aantal vluchten in deze maand
                 * @example 58
                 */
                VLUCHTEN?: number;
                /**
                 * @description Aantal lierstarts voor deze maand voor dit vliegtuig
                 * @example 12
                 */
                LIERSTARTS?: number;
                /**
                 * @description Aantal sleepstarts voor deze maand voor dit vliegtuig
                 * @example 46
                 */
                SLEEPSTARTS?: number;
                /**
                 * @description Starttijd (hh:mm)
                 * @example 12:32
                 */
                VLIEGTIJD?: string;
                /**
                 * @description Combinatie van registratie en callsign van het vliegtuig waarop gevlogen is
                 * @example PH-1292 (E6)
                 */
                REG_CALL?: string;
            }[];
        };
        recency: {
            /** @example 2 */
            STARTS_DRIE_MND?: number;
            /** @example 85 */
            STARTS_24_MND?: number;
            /** @example 36 */
            STARTS_VORIG_JAAR?: number;
            /** @example 2 */
            STARTS_DIT_JAAR?: number;
            /**
             * @description aantal instructie starts in laatste 3 jaar (alleen voor instructeurs)
             * @example 12
             */
            STARTS_INSTRUCTIE?: number;
            /** @example 1:42 */
            UREN_DRIE_MND?: string;
            /** @example 29:13 */
            UREN_24_MND?: string;
            /** @example 1:42 */
            UREN_VORIG_JAAR?: string;
            /** @example 27:31 */
            UREN_DIT_JAAR?: string;
            /**
             * @description aantal instructie uren in laatste 3 jaar (alleen voor instructeurs)
             * @example 78:31
             */
            UREN_INSTRUCTIE?: string;
            /** @example onbekend */
            STATUS_BAROMETER?: string;
            /**
             * @description 0-10 = rood, 10-20 = geel, > 20 = groen.  Geeft inzicht waarde in de status
             * @example 12.4
             */
            WAARDE?: number;
            /** @example 38 */
            STARTS_BAROMETER?: string;
            /** @example 29:13 */
            UREN_BAROMETER?: string;
            /**
             * @description Aantal lierstarts in 24 maanden voor peildatum
             * @example 36
             */
            LIERSTARTS?: number;
            /**
             * @description Aantal sleepstarts in 24 maanden voor peildatum
             * @example 10
             */
            SLEEPSTARTS?: number;
            /**
             * @description Aantal zelfstarts in 24 maanden voor peildatum
             * @example 8
             */
            ZELFSTARTS?: number;
            /**
             * @description Aantal TMG starts in 24 maanden voor peildatum
             * @example 0
             */
            TMGSTARTS?: number;
            /**
             * @description Array met checkstarts
             * @example 04-03-2022, 05-04-2021
             */
            CHECKS?: string[];
        };
        vliegdagen: {
            /**
             * Format: int32
             * @description Aantal records dat voldoet aan de criteria in de database
             * @example 287
             */
            totaal?: number;
            /**
             * Format: date-time
             * @description Tijdstempel van laaste aanpassing in de database van de records dat voldoet aan de criteria
             * @example 2009-12-02 10:19:00
             */
            laatste_aanpassing?: string;
            /**
             * @description hash van de dataset
             * @example 4dccb3f
             */
            hash?: string;
            dataset?: {
                /**
                 * Format: date
                 * @description Datum van de start
                 * @example 2017-07-21
                 */
                DATUM?: string;
                /** @example 2 */
                STARTS?: number;
                /** @example 29:13 */
                VLIEGTIJD?: string;
            }[];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
